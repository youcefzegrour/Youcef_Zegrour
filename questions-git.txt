QUESTIONS:

1/- C'est quoi Git ?
 Git est un logiciel de contrôle de version,
 ce qui signifie qu’il gère les modifications d’un projet sans écraser n’importe quelle partie du projet.

2/- C'est quoi un repository git ?
Un répertoire ou de l’espace de stockage où vos projets peuvent vivre.

3/- Quelle commande faut t il écrire pour valider un ajout dans un repertoire git ?
git commit –m “Description du commit”
4/- que fait la commande git push ?
envoyer les modifications locales apportées à la branche principale associée :
5/- quel est l'avantage de git par rapport à svn?

6/- c'est quoi la commande git stash ?
une comande qui aide à enregistrer les changements qui ne doivent pas être commit immédiatement.
 C’est comme un commit temporaire.
7/- c'est quoi la commande git branch ?
La commande git branch peut être utilisée pour répertorier, créer ou supprimer des branches. 
Pour répertorier toutes les branches présentes dans le dépôt
8/- c'est quoi la commande git clone ?
commande utilisée pour la vérification des dépôts. Si le dépôt se trouve sur un serveur distant
9/-c'est quoi la commande git config ?
 On l’utilise pour configurer les préférences de l’utilisateur(email ....)
10/- c'est quoi la commande git init ?
commande utilisée pour créer un nouveau dépôt 
11/- c'est quoi un conflit git ?
un coflit git est genéré lorsque deux branches modifient la même partie d’un même fichier.

12/- comment resoudre un conflit git ?
_faire un git status qui va donner le fichier en conflit
_aller dans le fichier en conflit pour choisir la bonne modification et la valider
_faire un git add et commit

13/- c'est quoi la commande git remote ?
 git remote permet à un utilisateur de se connecter à un dépôt distant. 

14/- quelle est la différence entre git remote et git clone ?

15/- c'est quoi la commande git status ?
 affiche la liste des fichiers modifiés ainsi que les fichiers qui doivent encore être ajoutés ou validés. 

16/- c'est quoi la commande git checkout ?
commande pour créer des branches ou pour basculer entre elles.
17/- c'est quoi la commande git log ?
génère le log d’une branche se qui permis de la pister

18/- donner la suite de commandes à écrire pour envoyer un fichier sur un repository distant
_aller dans le dossier de fichier 
_git init
_ git add .
_git commit _m ""
_git remote add origin "lien"
_git pull origin master
_git push origin master
19/- c'est quoi github ?
est un service web d'hébergement et de gestion de développement de logiciels,
 utilisant le logiciel de gestion de versions Git.
20/- citer 3 avantages d'utiliser git dans un projet
_faciliter le travail en groupe

21/- c'est quoi le fichier .gitignore

 un fichier permetant dignorer certain type de fichiers 

22/- quelles sont les étapes permettant de lier un projet git local à github?

23/- quel est le role des branches sur git ?

24/- c'est quoi un conflit git?
un coflit git est genéré lorsque deux branches modifient la même partie d’un même fichier.

25/- comment resoudre un conflit sur git ?

_faire un git status qui va donner le fichier en conflit
_aller dans le fichier en conflit pour choisir la bonne modification et la valider
_faire un git add et commit

LE BONCOIN:

UML
---
 Personne 1-----------* Annonce
 personneId             idAnnonce 
 nom                    intitule
 prenom                 detail
 login                  prix
 motDePasse
 dateNaissance   

 - créer un projet java : Ensup-Master1-tp2-Nom-Prenom
 - configurer le git/github avec un projet java et rajouter serviceshuios en collaborateur
 
 Metier:
--------
 Personne
 Annonce
 
 Iservice:
----------
  //Crud Personne
 public int creerPersonne(List<Personne> list, Personne personne)
 public Personne getPersonne(List<Personne> list,int idPersonne)
 public void deletePersonne(List<Personne> list,int idPersonne)
 public void updatePersonne(List<Personne> list,Personne p, String nom, String prenom, Date dateNaissance)
 public List<Personne> findAllPersonnes()
 public int getPersonneId(List<Personne> list,Personne p)
 public void affichePersonnes();
 public void afficheAnnoncesPersonne(Personne p)
 //Crud Annonce
 public int creerAnnonce(Personne personne, Annonce a)
 public Annonce getAnnonce(Personne personne,int idAnnonce)
 public void deleteAnnonce(Personne personne,int idAnnonce)
 public void updateAnnonce(Personne personne,Annonce a)
 public List<Annonce> findAllAnnonce(Personne personne)

ServiceImpl
-----------
implementation de l'interface
utiliser un tableau de Personne pour office de stockage des données
public static List<Personne> base = new ArrayList<Personne>();

Lanceur
-------
Tester chaque méthode

A la fin (17h00) au plus tard pusher son code sur github  